<Window x:Class="TestDepedencyProperties.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestDepedencyProperties"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <WrapPanel>
            <Label Grid.Column="0" Content="Window Text:" />
            <!--Text is bound/displayed via the MainWindowViewModel-->
            <TextBox IsEnabled="False" Grid.Column="1" Text="{Binding Text}" />
        </WrapPanel>

        <TextBlock TextWrapping="Wrap" Grid.Row="1" Margin="20,0">
            I would expect the below button to update the Bound Control Text to match the Window Text.
            The Command Parameter should be bound to DepedencyProperty Text on the CustomUserControl, and should display a value
            immediately below to match the Window Text above.
        </TextBlock>

        <!--MainWindowViewModel Text property is bound to the Text DependencyProperty of the custom control, should rebind when changed-->
        <local:CustomUserControl Grid.Row="2" Text="{Binding Text}" />
    </Grid>
</Window>
